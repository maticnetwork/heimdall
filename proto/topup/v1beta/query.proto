syntax = "proto3";
package heimdall.topup.v1beta1;

import "google/api/annotations.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/maticnetwork/heimdall/x/topup/types";

option (gogoproto.sizer_all)       = true;
option (gogoproto.marshaler_all)   = true;
option (gogoproto.unmarshaler_all) = true;

// Query defines the gRPC querier service.
service Query {
    // this line is used by starport scaffolding # 2
    rpc Sequence(QuerySequenceRequest) returns (QuerySequenceResponse) {
        option (google.api.http).get = "/x/topup/types/msg_topup/{tx_hash}";
    }
}

// this line is used by starport scaffolding # 3

message QuerySequenceRequest {
    option (gogoproto.goproto_getters) = false;
    string tx_hash                     = 1;
    uint64 log_index                   = 2;
}

message QuerySequenceResponse {
    option (gogoproto.goproto_getters) = false;
    uint64 sequence                    = 1;
}
