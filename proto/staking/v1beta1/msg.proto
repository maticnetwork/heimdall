syntax = "proto3";
package heimdall.staking.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";

option go_package = "github.com/maticnetwork/heimdall/x/staking/types";

option (gogoproto.sizer_all)       = false;
option (gogoproto.marshaler_all)   = false;
option (gogoproto.unmarshaler_all) = false;

// Msg defines the staking Msg service.
service Msg {
  // ValidatorJoin defines a method to join a new validator.
  rpc ValidatorJoin(MsgValidatorJoin) returns (MsgValidatorJoinResponse);

  // StakeUpdate defines a method to update stake for an existing validator.
  rpc StakeUpdate(MsgStakeUpdate) returns (MsgStakeUpdateResponse);

  // SignerUpdate defines a method for update singer details of
  // exisitng validator.
  rpc SignerUpdate(MsgSignerUpdate) returns (MsgSignerUpdateResponse);

  // ValidatorExit defines a method to handle validator exit
  rpc ValidatorExit(MsgValidatorExit) returns (MsgValidatorExitResponse);
}

// MsgValidatorJoin defines a message to join a new validator.
message MsgValidatorJoin {
    option (gogoproto.goproto_getters) = false;
    string from                        = 1
        [(gogoproto.casttype) =
             "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    uint64 id = 2 [
        (gogoproto.casttype) =
            "github.com/maticnetwork/heimdall/types.ValidatorID",
        (gogoproto.customname) = "ID"
    ];
    uint64 activation_epoch = 3;
    string amount           = 4
        [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Int"];
    string signer_pub_key = 5
        [(gogoproto.casttype) =
             "github.com/maticnetwork/heimdall/types/common.PubKey"];
    string tx_hash = 6
        [(gogoproto.casttype) =
             "github.com/maticnetwork/heimdall/types/common.HeimdallHash"];
    uint64 log_index    = 7;
    uint64 block_number = 8;
    uint64 nonce        = 9;
}

// MsgValidatorJoinResponse defines ValidatorJoin response type.
message MsgValidatorJoinResponse{}

// MsgStakeUpdate defines a message to update stake for a validator.
message MsgStakeUpdate {
    option (gogoproto.goproto_getters) = false;
    string from                        = 1
        [(gogoproto.casttype) =
             "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    uint64 id = 2 [
        (gogoproto.casttype) =
            "github.com/maticnetwork/heimdall/types.ValidatorID",
        (gogoproto.customname) = "ID"
    ];
    string new_amount = 3
        [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Int"];
    string tx_hash = 4
        [(gogoproto.casttype) =
             "github.com/maticnetwork/heimdall/types/common.HeimdallHash"];
    uint64 log_index    = 7;
    uint64 block_number = 8;
    uint64 nonce        = 9;
}

// MsgStakeUpdateResponse defines StakeUpdate response type.
message MsgStakeUpdateResponse{}

// MsgSignerUpdate defines a message to update signer of a validator.
message MsgSignerUpdate {
    option (gogoproto.goproto_getters) = false;
    string from                        = 1
        [(gogoproto.casttype) =
             "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    uint64 id = 2 [
        (gogoproto.casttype) =
            "github.com/maticnetwork/heimdall/types.ValidatorID",
        (gogoproto.customname) = "ID"
    ];
    string new_signer_pub_key = 3
        [(gogoproto.casttype) =
             "github.com/maticnetwork/heimdall/types/common.PubKey"];
    string tx_hash = 4
        [(gogoproto.casttype) =
             "github.com/maticnetwork/heimdall/types/common.HeimdallHash"];
    uint64 log_index    = 5;
    uint64 block_number = 6;
    uint64 nonce        = 7;
}

// MsgSignerUpdateResponse defines SignerUpdate response type.
message MsgSignerUpdateResponse{}

// MsgValidatorExit defines a message to exit as a validator  
message MsgValidatorExit {
    option (gogoproto.goproto_getters) = false;
    string from                        = 1
        [(gogoproto.casttype) =
             "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    uint64 id = 2 [
        (gogoproto.casttype) =
            "github.com/maticnetwork/heimdall/types.ValidatorID",
        (gogoproto.customname) = "ID"
    ];
    uint64 deactivation_epoch = 3;
    string tx_hash            = 4
        [(gogoproto.casttype) =
             "github.com/maticnetwork/heimdall/types/common.HeimdallHash"];
    uint64 log_index    = 5;
    uint64 block_number = 6;
    uint64 nonce        = 7;
}

// MsgValidatorExitResponse is response type for ValidatorExit RPC method
message MsgValidatorExitResponse{}
