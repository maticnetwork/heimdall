syntax = "proto3";
package heimdall.checkpoint.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "heimdall/types/headers.proto";

option go_package = "github.com/maticnetwork/heimdall/x/checkpoint/types";

option (gogoproto.sizer_all)       = true;
option (gogoproto.marshaler_all)   = true;
option (gogoproto.unmarshaler_all) = true;

message Params {
    option (gogoproto.goproto_getters)  = false;
    option (gogoproto.goproto_stringer) = false;

    google.protobuf.Duration checkpoint_buffer_time = 1
        [(gogoproto.nullable) = false, (gogoproto.stdduration) = true];
    uint64 avg_checkpoint_length = 2;
    uint64 max_checkpoint_length = 3;
    uint64 child_block_interval  = 4;
}

// GenesisState defines the checkpoint module's genesis state.
message GenesisState {
    option (gogoproto.goproto_getters) = false;
    option (gogoproto.goproto_stringer) = true;

    Params              params              = 1 [(gogoproto.nullable) = false];
    heimdall.types.Checkpoint buffered_checkpoint = 2;
    uint64   last_no_ack = 3 [(gogoproto.customname) = "LastNoACK"];
    uint64   ack_count   = 4;
    repeated heimdall.types.Checkpoint checkpoints = 5;
}
