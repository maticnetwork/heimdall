syntax = "proto3";
package heimdall.clerk.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/maticnetwork/heimdall/x/clerk/types";

option (gogoproto.marshaler_all)   = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all)       = true;

message EventRecord {
    option (gogoproto.goproto_getters) = false;

    uint64 id = 1
        [(gogoproto.jsontag) = "id", (gogoproto.moretags) = "yaml:\"id\""];
    string                    contract    = 2;
    bytes                     data        = 3;
    google.protobuf.Timestamp record_time = 4 [
        (gogoproto.stdtime)  = true,
        (gogoproto.nullable) = false,
        (gogoproto.moretags) = "yaml:\"record_time\""
    ];
    uint64 log_index = 5 [(gogoproto.moretags) = "yaml:\"log_index\""];
    string tx_hash   = 6 [(gogoproto.moretags) = "yaml:\"tx_hash\""];
    string chain_id  = 7 [(gogoproto.moretags) = "yaml:\"chain_id\""];
}
