// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: staking/v1beta1/msg.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/codec/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/duration"
	github_com_maticnetwork_heimdall_types "github.com/maticnetwork/heimdall/types"
	github_com_maticnetwork_heimdall_types_common "github.com/maticnetwork/heimdall/types/common"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgValidatorJoin struct {
	From            github_com_maticnetwork_heimdall_types_common.HeimdallAddress `protobuf:"bytes,1,opt,name=from,proto3,casttype=github.com/maticnetwork/heimdall/types/common.HeimdallAddress" json:"from,omitempty"`
	ID              github_com_maticnetwork_heimdall_types.ValidatorID            `protobuf:"varint,2,opt,name=id,proto3,casttype=github.com/maticnetwork/heimdall/types.ValidatorID" json:"id,omitempty"`
	ActivationEpoch uint64                                                        `protobuf:"varint,3,opt,name=activation_epoch,json=activationEpoch,proto3" json:"activation_epoch,omitempty"`
	Amount          github_com_cosmos_cosmos_sdk_types.Int                        `protobuf:"bytes,4,opt,name=amount,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Int" json:"amount,omitempty"`
	SignerPubKey    github_com_maticnetwork_heimdall_types_common.PubKey          `protobuf:"bytes,5,opt,name=signer_pub_key,json=signerPubKey,proto3,casttype=github.com/maticnetwork/heimdall/types/common.PubKey" json:"signer_pub_key,omitempty"`
	TxHash          github_com_maticnetwork_heimdall_types_common.HeimdallHash    `protobuf:"bytes,6,opt,name=tx_hash,json=txHash,proto3,casttype=github.com/maticnetwork/heimdall/types/common.HeimdallHash" json:"tx_hash,omitempty"`
	LogIndex        uint64                                                        `protobuf:"varint,7,opt,name=log_index,json=logIndex,proto3" json:"log_index,omitempty"`
	BlockNumber     uint64                                                        `protobuf:"varint,8,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	Nonce           uint64                                                        `protobuf:"varint,9,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (m *MsgValidatorJoin) Reset()         { *m = MsgValidatorJoin{} }
func (m *MsgValidatorJoin) String() string { return proto.CompactTextString(m) }
func (*MsgValidatorJoin) ProtoMessage()    {}
func (*MsgValidatorJoin) Descriptor() ([]byte, []int) {
	return fileDescriptor_2118b48eedb93a64, []int{0}
}
func (m *MsgValidatorJoin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgValidatorJoin.Unmarshal(m, b)
}
func (m *MsgValidatorJoin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgValidatorJoin.Marshal(b, m, deterministic)
}
func (m *MsgValidatorJoin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgValidatorJoin.Merge(m, src)
}
func (m *MsgValidatorJoin) XXX_Size() int {
	return xxx_messageInfo_MsgValidatorJoin.Size(m)
}
func (m *MsgValidatorJoin) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgValidatorJoin.DiscardUnknown(m)
}

var xxx_messageInfo_MsgValidatorJoin proto.InternalMessageInfo

type MsgStakeUpdate struct {
	From        github_com_maticnetwork_heimdall_types_common.HeimdallAddress `protobuf:"bytes,1,opt,name=from,proto3,casttype=github.com/maticnetwork/heimdall/types/common.HeimdallAddress" json:"from,omitempty"`
	ID          github_com_maticnetwork_heimdall_types.ValidatorID            `protobuf:"varint,2,opt,name=id,proto3,casttype=github.com/maticnetwork/heimdall/types.ValidatorID" json:"id,omitempty"`
	NewAmount   github_com_cosmos_cosmos_sdk_types.Int                        `protobuf:"bytes,3,opt,name=new_amount,json=newAmount,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Int" json:"new_amount,omitempty"`
	TxHash      github_com_maticnetwork_heimdall_types_common.HeimdallHash    `protobuf:"bytes,4,opt,name=tx_hash,json=txHash,proto3,casttype=github.com/maticnetwork/heimdall/types/common.HeimdallHash" json:"tx_hash,omitempty"`
	LogIndex    uint64                                                        `protobuf:"varint,7,opt,name=log_index,json=logIndex,proto3" json:"log_index,omitempty"`
	BlockNumber uint64                                                        `protobuf:"varint,8,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	Nonce       uint64                                                        `protobuf:"varint,9,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (m *MsgStakeUpdate) Reset()         { *m = MsgStakeUpdate{} }
func (m *MsgStakeUpdate) String() string { return proto.CompactTextString(m) }
func (*MsgStakeUpdate) ProtoMessage()    {}
func (*MsgStakeUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_2118b48eedb93a64, []int{1}
}
func (m *MsgStakeUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgStakeUpdate.Unmarshal(m, b)
}
func (m *MsgStakeUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgStakeUpdate.Marshal(b, m, deterministic)
}
func (m *MsgStakeUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStakeUpdate.Merge(m, src)
}
func (m *MsgStakeUpdate) XXX_Size() int {
	return xxx_messageInfo_MsgStakeUpdate.Size(m)
}
func (m *MsgStakeUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStakeUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStakeUpdate proto.InternalMessageInfo

type MsgSignerUpdate struct {
	From            github_com_maticnetwork_heimdall_types_common.HeimdallAddress `protobuf:"bytes,1,opt,name=from,proto3,casttype=github.com/maticnetwork/heimdall/types/common.HeimdallAddress" json:"from,omitempty"`
	ID              github_com_maticnetwork_heimdall_types.ValidatorID            `protobuf:"varint,2,opt,name=id,proto3,casttype=github.com/maticnetwork/heimdall/types.ValidatorID" json:"id,omitempty"`
	NewSignerPubKey github_com_maticnetwork_heimdall_types_common.PubKey          `protobuf:"bytes,3,opt,name=new_signer_pub_key,json=newSignerPubKey,proto3,casttype=github.com/maticnetwork/heimdall/types/common.PubKey" json:"new_signer_pub_key,omitempty"`
	TxHash          github_com_maticnetwork_heimdall_types_common.HeimdallHash    `protobuf:"bytes,4,opt,name=tx_hash,json=txHash,proto3,casttype=github.com/maticnetwork/heimdall/types/common.HeimdallHash" json:"tx_hash,omitempty"`
	LogIndex        uint64                                                        `protobuf:"varint,5,opt,name=log_index,json=logIndex,proto3" json:"log_index,omitempty"`
	BlockNumber     uint64                                                        `protobuf:"varint,6,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	Nonce           uint64                                                        `protobuf:"varint,7,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (m *MsgSignerUpdate) Reset()         { *m = MsgSignerUpdate{} }
func (m *MsgSignerUpdate) String() string { return proto.CompactTextString(m) }
func (*MsgSignerUpdate) ProtoMessage()    {}
func (*MsgSignerUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_2118b48eedb93a64, []int{2}
}
func (m *MsgSignerUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgSignerUpdate.Unmarshal(m, b)
}
func (m *MsgSignerUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgSignerUpdate.Marshal(b, m, deterministic)
}
func (m *MsgSignerUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSignerUpdate.Merge(m, src)
}
func (m *MsgSignerUpdate) XXX_Size() int {
	return xxx_messageInfo_MsgSignerUpdate.Size(m)
}
func (m *MsgSignerUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSignerUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSignerUpdate proto.InternalMessageInfo

type MsgValidatorExit struct {
	From              github_com_maticnetwork_heimdall_types_common.HeimdallAddress `protobuf:"bytes,1,opt,name=from,proto3,casttype=github.com/maticnetwork/heimdall/types/common.HeimdallAddress" json:"from,omitempty"`
	ID                github_com_maticnetwork_heimdall_types.ValidatorID            `protobuf:"varint,2,opt,name=id,proto3,casttype=github.com/maticnetwork/heimdall/types.ValidatorID" json:"id,omitempty"`
	DeactivationEpoch uint64                                                        `protobuf:"varint,3,opt,name=deactivation_epoch,json=deactivationEpoch,proto3" json:"deactivation_epoch,omitempty"`
	TxHash            github_com_maticnetwork_heimdall_types_common.HeimdallHash    `protobuf:"bytes,4,opt,name=tx_hash,json=txHash,proto3,casttype=github.com/maticnetwork/heimdall/types/common.HeimdallHash" json:"tx_hash,omitempty"`
	LogIndex          uint64                                                        `protobuf:"varint,5,opt,name=log_index,json=logIndex,proto3" json:"log_index,omitempty"`
	BlockNumber       uint64                                                        `protobuf:"varint,6,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	Nonce             uint64                                                        `protobuf:"varint,7,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (m *MsgValidatorExit) Reset()         { *m = MsgValidatorExit{} }
func (m *MsgValidatorExit) String() string { return proto.CompactTextString(m) }
func (*MsgValidatorExit) ProtoMessage()    {}
func (*MsgValidatorExit) Descriptor() ([]byte, []int) {
	return fileDescriptor_2118b48eedb93a64, []int{3}
}
func (m *MsgValidatorExit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgValidatorExit.Unmarshal(m, b)
}
func (m *MsgValidatorExit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgValidatorExit.Marshal(b, m, deterministic)
}
func (m *MsgValidatorExit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgValidatorExit.Merge(m, src)
}
func (m *MsgValidatorExit) XXX_Size() int {
	return xxx_messageInfo_MsgValidatorExit.Size(m)
}
func (m *MsgValidatorExit) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgValidatorExit.DiscardUnknown(m)
}

var xxx_messageInfo_MsgValidatorExit proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgValidatorJoin)(nil), "heimdall.staking.v1beta1.MsgValidatorJoin")
	proto.RegisterType((*MsgStakeUpdate)(nil), "heimdall.staking.v1beta1.MsgStakeUpdate")
	proto.RegisterType((*MsgSignerUpdate)(nil), "heimdall.staking.v1beta1.MsgSignerUpdate")
	proto.RegisterType((*MsgValidatorExit)(nil), "heimdall.staking.v1beta1.MsgValidatorExit")
}

func init() { proto.RegisterFile("staking/v1beta1/msg.proto", fileDescriptor_2118b48eedb93a64) }

var fileDescriptor_2118b48eedb93a64 = []byte{
	// 603 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x56, 0x41, 0x4f, 0xd4, 0x4e,
	0x14, 0x2f, 0xbb, 0xcb, 0xc2, 0xce, 0x9f, 0x00, 0xff, 0x09, 0x87, 0x82, 0x49, 0x8b, 0x1c, 0x0c,
	0x9a, 0xd0, 0x8a, 0x7a, 0x30, 0x44, 0x4d, 0xd8, 0x40, 0xc2, 0xa2, 0x18, 0x53, 0x82, 0x26, 0x1e,
	0x6c, 0xa6, 0xed, 0x30, 0x9d, 0xb4, 0x9d, 0xd9, 0x74, 0xa6, 0xec, 0xee, 0x37, 0xf0, 0xe8, 0xdd,
	0x8b, 0x5f, 0xc2, 0x93, 0x5f, 0xc0, 0x23, 0xf1, 0xe4, 0xa9, 0x31, 0xcb, 0xb7, 0xd8, 0x93, 0xe9,
	0xb4, 0x28, 0x62, 0x10, 0xd1, 0x78, 0xd8, 0xd3, 0xf4, 0xbd, 0xdf, 0xeb, 0x6f, 0x66, 0xde, 0xef,
	0xbd, 0xd7, 0x82, 0x45, 0x21, 0x51, 0x44, 0x19, 0xb1, 0x8f, 0xd6, 0x3d, 0x2c, 0xd1, 0xba, 0x9d,
	0x08, 0x62, 0x75, 0x53, 0x2e, 0x39, 0xd4, 0x43, 0x4c, 0x93, 0x00, 0xc5, 0xb1, 0x55, 0xc5, 0x58,
	0x55, 0xcc, 0xd2, 0x02, 0xe1, 0x84, 0xab, 0x20, 0xbb, 0x78, 0x2a, 0xe3, 0x97, 0x16, 0x09, 0xe7,
	0x24, 0xc6, 0xb6, 0xb2, 0xbc, 0xec, 0xd0, 0x46, 0x6c, 0x50, 0x41, 0xc6, 0x79, 0x28, 0xc8, 0x52,
	0x24, 0x29, 0x67, 0x25, 0xbe, 0xf2, 0xa1, 0x01, 0xe6, 0xf7, 0x04, 0x79, 0x8e, 0x62, 0x1a, 0x20,
	0xc9, 0xd3, 0x5d, 0x4e, 0x19, 0x3c, 0x00, 0x8d, 0xc3, 0x94, 0x27, 0xfa, 0xc4, 0xf2, 0xc4, 0x6a,
	0xab, 0xbd, 0x39, 0xca, 0xcd, 0x87, 0x84, 0xca, 0x30, 0xf3, 0x2c, 0x9f, 0x27, 0x76, 0x82, 0x24,
	0xf5, 0x19, 0x96, 0x3d, 0x9e, 0x46, 0xf6, 0xe9, 0x49, 0x6d, 0x39, 0xe8, 0x62, 0x61, 0xfb, 0x3c,
	0x49, 0x38, 0xb3, 0x76, 0x2a, 0xef, 0x66, 0x10, 0xa4, 0x58, 0x08, 0x47, 0xd1, 0xc1, 0x27, 0xa0,
	0x46, 0x03, 0xbd, 0xb6, 0x3c, 0xb1, 0xda, 0x68, 0x3f, 0x18, 0xe6, 0x66, 0xad, 0xb3, 0x35, 0xca,
	0xcd, 0x3b, 0xbf, 0x47, 0x6d, 0x7d, 0x3b, 0x62, 0x67, 0xcb, 0xa9, 0xd1, 0x00, 0xde, 0x04, 0xf3,
	0xc8, 0x97, 0xf4, 0x48, 0xdd, 0xc6, 0xc5, 0x5d, 0xee, 0x87, 0x7a, 0xbd, 0xe0, 0x76, 0xe6, 0xbe,
	0xfb, 0xb7, 0x0b, 0x37, 0x6c, 0x83, 0x26, 0x4a, 0x78, 0xc6, 0xa4, 0xde, 0x50, 0x37, 0xba, 0x35,
	0xca, 0xcd, 0x1b, 0x67, 0xb6, 0xf5, 0xb9, 0x48, 0xb8, 0xa8, 0x96, 0x35, 0x11, 0x44, 0xd5, 0x96,
	0x1d, 0x26, 0x9d, 0xea, 0x4d, 0xf8, 0x0a, 0xcc, 0x0a, 0x4a, 0x18, 0x4e, 0xdd, 0x6e, 0xe6, 0xb9,
	0x11, 0x1e, 0xe8, 0x93, 0x8a, 0xeb, 0xfe, 0x28, 0x37, 0xef, 0x5d, 0x2d, 0x3b, 0xcf, 0x32, 0xef,
	0x31, 0x1e, 0x38, 0x33, 0x25, 0x5f, 0x69, 0xc1, 0x17, 0x60, 0x4a, 0xf6, 0xdd, 0x10, 0x89, 0x50,
	0x6f, 0x2a, 0xe2, 0x47, 0xa3, 0xdc, 0xdc, 0xf8, 0xb3, 0xb4, 0xef, 0x20, 0x11, 0x3a, 0x4d, 0xd9,
	0x2f, 0x56, 0x78, 0x0d, 0xb4, 0x62, 0x4e, 0x5c, 0xca, 0x02, 0xdc, 0xd7, 0xa7, 0x54, 0x82, 0xa6,
	0x63, 0x4e, 0x3a, 0x85, 0x0d, 0xaf, 0x83, 0x19, 0x2f, 0xe6, 0x7e, 0xe4, 0xb2, 0x2c, 0xf1, 0x70,
	0xaa, 0x4f, 0x2b, 0xfc, 0x3f, 0xe5, 0x7b, 0xaa, 0x5c, 0x70, 0x01, 0x4c, 0x32, 0xce, 0x7c, 0xac,
	0xb7, 0x14, 0x56, 0x1a, 0x1b, 0x8d, 0xd7, 0xef, 0x4c, 0x6d, 0xe5, 0x7d, 0x1d, 0xcc, 0xee, 0x09,
	0xb2, 0x2f, 0x51, 0x84, 0x0f, 0xba, 0x01, 0x92, 0x78, 0x3c, 0x6a, 0xa7, 0x03, 0x00, 0xc3, 0x3d,
	0xb7, 0x2a, 0x8a, 0xfa, 0x95, 0x8b, 0xa2, 0xc5, 0x70, 0x6f, 0xb3, 0xac, 0x8b, 0x33, 0xba, 0x35,
	0xc6, 0x46, 0xb7, 0x4f, 0x75, 0x30, 0x57, 0xe8, 0xa6, 0x0a, 0x70, 0x9c, 0x84, 0xc3, 0x00, 0x16,
	0xc2, 0x9d, 0xeb, 0xc4, 0xfa, 0x5f, 0x76, 0xe2, 0x1c, 0xc3, 0xbd, 0xfd, 0x0b, 0x9a, 0xf1, 0x1f,
	0x8a, 0x3a, 0x79, 0x89, 0xa8, 0xcd, 0x5f, 0x88, 0x3a, 0xf5, 0xb3, 0xa8, 0x6f, 0xeb, 0x3f, 0x8e,
	0xf2, 0xed, 0x3e, 0x95, 0xe3, 0xa1, 0xea, 0x1a, 0x80, 0x01, 0xbe, 0x60, 0x98, 0xff, 0x7f, 0x16,
	0x29, 0xc7, 0xf9, 0x38, 0xaa, 0xd3, 0xde, 0xfd, 0x38, 0x34, 0xb4, 0xe3, 0xa1, 0xa1, 0x7d, 0x19,
	0x1a, 0xda, 0x9b, 0x13, 0x43, 0x3b, 0x3e, 0x31, 0xb4, 0xcf, 0x27, 0x86, 0xf6, 0xf2, 0xf6, 0xa5,
	0x27, 0xef, 0xdb, 0xa7, 0xff, 0x0a, 0xea, 0x0e, 0x5e, 0x53, 0x7d, 0xbb, 0xef, 0x7e, 0x0d, 0x00,
	0x00, 0xff, 0xff, 0x3c, 0x11, 0x54, 0x9b, 0x43, 0x08, 0x00, 0x00,
}
