// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: heimdall/clerk/v1beta1/msg.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgEventRecordRequest struct {
	From            string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	TxHash          string `protobuf:"bytes,2,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty" yaml:"tx_hash"`
	LogIndex        uint64 `protobuf:"varint,3,opt,name=log_index,json=logIndex,proto3" json:"log_index,omitempty" yaml:"log_index"`
	BlockNumber     uint64 `protobuf:"varint,4,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty" yaml:"block_number"`
	ContractAddress string `protobuf:"bytes,5,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty" yaml:"contract_address"`
	Data            []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	Id              uint64 `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`
	ChainId         string `protobuf:"bytes,8,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty" yaml:"chain_id"`
}

func (m *MsgEventRecordRequest) Reset()         { *m = MsgEventRecordRequest{} }
func (m *MsgEventRecordRequest) String() string { return proto.CompactTextString(m) }
func (*MsgEventRecordRequest) ProtoMessage()    {}
func (*MsgEventRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33a757f1966ba7e9, []int{0}
}
func (m *MsgEventRecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgEventRecordRequest.Unmarshal(m, b)
}
func (m *MsgEventRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgEventRecordRequest.Marshal(b, m, deterministic)
}
func (m *MsgEventRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEventRecordRequest.Merge(m, src)
}
func (m *MsgEventRecordRequest) XXX_Size() int {
	return xxx_messageInfo_MsgEventRecordRequest.Size(m)
}
func (m *MsgEventRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEventRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEventRecordRequest proto.InternalMessageInfo

// MsgEventRecordResponse defines MsgEventRecord response type.
type MsgEventRecordResponse struct {
}

func (m *MsgEventRecordResponse) Reset()         { *m = MsgEventRecordResponse{} }
func (m *MsgEventRecordResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEventRecordResponse) ProtoMessage()    {}
func (*MsgEventRecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33a757f1966ba7e9, []int{1}
}
func (m *MsgEventRecordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgEventRecordResponse.Unmarshal(m, b)
}
func (m *MsgEventRecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgEventRecordResponse.Marshal(b, m, deterministic)
}
func (m *MsgEventRecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEventRecordResponse.Merge(m, src)
}
func (m *MsgEventRecordResponse) XXX_Size() int {
	return xxx_messageInfo_MsgEventRecordResponse.Size(m)
}
func (m *MsgEventRecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEventRecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEventRecordResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgEventRecordRequest)(nil), "heimdall.clerk.v1beta1.MsgEventRecordRequest")
	proto.RegisterType((*MsgEventRecordResponse)(nil), "heimdall.clerk.v1beta1.MsgEventRecordResponse")
}

func init() { proto.RegisterFile("heimdall/clerk/v1beta1/msg.proto", fileDescriptor_33a757f1966ba7e9) }

var fileDescriptor_33a757f1966ba7e9 = []byte{
	// 437 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xb1, 0x6e, 0xdb, 0x30,
	0x10, 0x86, 0x65, 0xc7, 0xb5, 0x1d, 0x36, 0x70, 0x02, 0x26, 0x4d, 0x88, 0x14, 0x90, 0x0c, 0x4d,
	0x06, 0x8a, 0x52, 0x70, 0xbb, 0x79, 0xab, 0x81, 0x16, 0xc9, 0x90, 0x0e, 0x1c, 0xbb, 0x08, 0x94,
	0xc8, 0x4a, 0x84, 0x25, 0xd1, 0x25, 0x69, 0xd7, 0x79, 0x83, 0x8e, 0x7d, 0x84, 0x3e, 0x4e, 0xc7,
	0x8c, 0x9d, 0x84, 0xc2, 0x9e, 0xba, 0xea, 0x09, 0x0a, 0x51, 0x4a, 0xd0, 0x06, 0x1e, 0xb2, 0xfd,
	0x77, 0xff, 0x77, 0xb8, 0x23, 0xef, 0xc0, 0x38, 0xe5, 0x22, 0x67, 0x34, 0xcb, 0x82, 0x38, 0xe3,
	0x6a, 0x11, 0xac, 0xa7, 0x11, 0x37, 0x74, 0x1a, 0xe4, 0x3a, 0xc1, 0x4b, 0x25, 0x8d, 0x84, 0xe7,
	0xf7, 0x04, 0xb6, 0x04, 0x6e, 0x89, 0xcb, 0xb3, 0x44, 0x26, 0xd2, 0x22, 0x41, 0xad, 0x1a, 0xda,
	0xff, 0xd3, 0x05, 0x2f, 0x6e, 0x74, 0xf2, 0x7e, 0xcd, 0x0b, 0x43, 0x78, 0x2c, 0x15, 0x23, 0xfc,
	0xcb, 0x8a, 0x6b, 0x03, 0x21, 0xe8, 0x7d, 0x56, 0x32, 0x47, 0x9d, 0x71, 0x67, 0x72, 0x48, 0xac,
	0x86, 0xaf, 0xc0, 0xc0, 0x6c, 0xc2, 0x94, 0xea, 0x14, 0x75, 0xeb, 0xf4, 0x1c, 0x56, 0xa5, 0x37,
	0xba, 0xa5, 0x79, 0x36, 0xf3, 0x5b, 0xc3, 0x27, 0x7d, 0xb3, 0xb9, 0xa2, 0x3a, 0x85, 0x53, 0x70,
	0x98, 0xc9, 0x24, 0x14, 0x05, 0xe3, 0x1b, 0x74, 0x30, 0xee, 0x4c, 0x7a, 0xf3, 0xb3, 0xaa, 0xf4,
	0x4e, 0x1a, 0xfc, 0xc1, 0xf2, 0xc9, 0x30, 0x93, 0xc9, 0x75, 0x2d, 0xe1, 0x0c, 0x1c, 0x45, 0x99,
	0x8c, 0x17, 0x61, 0xb1, 0xca, 0x23, 0xae, 0x50, 0xcf, 0x56, 0x5d, 0x54, 0xa5, 0x77, 0xda, 0x54,
	0xfd, 0xeb, 0xfa, 0xe4, 0xb9, 0x0d, 0x3f, 0xda, 0x08, 0x7e, 0x00, 0x27, 0xb1, 0x2c, 0x8c, 0xa2,
	0xb1, 0x09, 0x29, 0x63, 0x8a, 0x6b, 0x8d, 0x9e, 0xd9, 0x21, 0x5f, 0x56, 0xa5, 0x77, 0xd1, 0xd4,
	0x3f, 0x26, 0x7c, 0x72, 0x7c, 0x9f, 0x7a, 0xd7, 0x64, 0xea, 0x77, 0x33, 0x6a, 0x28, 0xea, 0x8f,
	0x3b, 0x93, 0x23, 0x62, 0x35, 0x1c, 0x81, 0xae, 0x60, 0x68, 0x50, 0x4f, 0x43, 0xba, 0x82, 0x41,
	0x0c, 0x86, 0x71, 0x4a, 0x45, 0x11, 0x0a, 0x86, 0x86, 0xb6, 0xc7, 0x69, 0x55, 0x7a, 0xc7, 0x6d,
	0x8f, 0xd6, 0xf1, 0xc9, 0xc0, 0xca, 0x6b, 0x36, 0xeb, 0x7d, 0xfb, 0xe1, 0x39, 0x3e, 0x02, 0xe7,
	0x8f, 0xbf, 0x5a, 0x2f, 0x65, 0xa1, 0xf9, 0x9b, 0x35, 0x38, 0xb8, 0xd1, 0x09, 0x94, 0x60, 0xf4,
	0x3f, 0x00, 0x5f, 0xe3, 0xfd, 0xdb, 0xc4, 0x7b, 0x77, 0x76, 0x89, 0x9f, 0x8a, 0x37, 0x7d, 0xe7,
	0x57, 0x3f, 0xb7, 0xae, 0x73, 0xb7, 0x75, 0x9d, 0xdf, 0x5b, 0xd7, 0xf9, 0xbe, 0x73, 0x9d, 0xbb,
	0x9d, 0xeb, 0xfc, 0xda, 0xb9, 0xce, 0x27, 0x9c, 0x08, 0x93, 0xae, 0x22, 0x1c, 0xcb, 0x3c, 0xc8,
	0xa9, 0x11, 0x71, 0xc1, 0xcd, 0x57, 0xa9, 0x16, 0xc1, 0xc3, 0xfd, 0x6d, 0xda, 0x0b, 0x34, 0xb7,
	0x4b, 0xae, 0xa3, 0xbe, 0x3d, 0xa7, 0xb7, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xac, 0x94, 0x7b,
	0xae, 0xa0, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// MsgEventRecord defines a method to join a new event record.
	MsgEventRecord(ctx context.Context, in *MsgEventRecordRequest, opts ...grpc.CallOption) (*MsgEventRecordResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) MsgEventRecord(ctx context.Context, in *MsgEventRecordRequest, opts ...grpc.CallOption) (*MsgEventRecordResponse, error) {
	out := new(MsgEventRecordResponse)
	err := c.cc.Invoke(ctx, "/heimdall.clerk.v1beta1.Msg/MsgEventRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// MsgEventRecord defines a method to join a new event record.
	MsgEventRecord(context.Context, *MsgEventRecordRequest) (*MsgEventRecordResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) MsgEventRecord(ctx context.Context, req *MsgEventRecordRequest) (*MsgEventRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MsgEventRecord not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_MsgEventRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEventRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MsgEventRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/heimdall.clerk.v1beta1.Msg/MsgEventRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MsgEventRecord(ctx, req.(*MsgEventRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "heimdall.clerk.v1beta1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MsgEventRecord",
			Handler:    _Msg_MsgEventRecord_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "heimdall/clerk/v1beta1/msg.proto",
}
